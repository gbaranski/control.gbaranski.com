{"version":3,"sources":["requests.ts","pages/login/index.tsx","components/title/index.tsx","pages/dashboard/Chart.tsx","components/status/index.tsx","components/leftNavigationBar/NavigationList.tsx","components/appbar/index.tsx","components/leftNavigationBar/index.tsx","components/copyright/index.tsx","helpers.ts","components/requests/index.tsx","pages/dashboard/index.tsx","components/tempChart/index.tsx","components/deviceManager/index.tsx","components/deviceInfo/index.tsx","pages/alarmclock/index.tsx","pages/watermixer/index.tsx","pages/loginLoading/index.tsx","index.tsx"],"names":["remoteUrl","getHeaders","headers","Headers","append","localStorage","getItem","login","a","loginPageUrl","fetch","method","res","status","alarmClockArrayUrl","json","JSON","parse","getRequestHistoryUrl","getAlarmClockData","alarmClockDataUrl","console","log","sendTimeRequest","date","formattedTime","getHours","getMinutes","ok","switchAlarmState","state","String","testSiren","get","getWatermixerData","startMixing","Copyright","Typography","variant","color","align","Link","href","target","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","LoginPage","props","classes","React","useState","username","setUsername","password","setPassword","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","handleSnackbarClose","handleSubmit","e","preventDefault","setItem","setAttemptedToLogin","setLoggedIn","Container","component","maxWidth","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","action","Fragment","Button","size","onClick","IconButton","aria-label","fontSize","CssBaseline","className","Avatar","autoComplete","onSubmit","TextField","required","fullWidth","id","label","name","value","onChange","autoFocus","type","Box","mt","Title","gutterBottom","children","createData","time","amount","data","Chart","useTheme","top","right","bottom","left","dataKey","stroke","text","angle","position","style","textAnchor","fill","primary","dot","Status","alarmclock","watermixer","gate","garage","deviceStatus","setDeviceStatus","useEffect","getDeviceStatus","then","GetAvatar","List","ListItem","key","ListItemText","ListItemAvatar","Divider","Icons","index","primaryText","returnText","Object","keys","Devices","Gate","Garage","disabledItems","checkIfDisabledItem","includes","values","secondaryListItems","ListSubheader","inset","button","ListItemIcon","disabled","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","toolbar","paddingRight","title","flexGrow","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","appBarSpacer","mixins","Appbar","AppBar","clsx","Toolbar","edge","handleDrawerOpen","noWrap","pageName","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","toolbarIcon","justifyContent","padding","LeftNavigationBar","Drawer","handleDrawerClose","map","_element","selected","currentlyOpen","setPage","mainListItems","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","formatOneDigitToDouble","string","slice","Requests","requestHistory","setRequestHistory","getRequestHistory","Table","TableHead","TableRow","TableCell","TableBody","row","parsedDate","Date","getDate","getMonth","getFullYear","parseDateToDateString","user","requestType","ip","root","content","height","overflow","container","paddingTop","paddingBottom","fixedHeight","Dashboard","fixedHeightPaper","setOpen","Grid","item","xs","md","lg","Paper","pt","TempChart","tempArray","setTempArray","getAlarmclockTemperatureArray","domain","tickFormatter","unixTime","moment","format","formatter","labelFormatter","CreateButtons","innerText","DeviceManager","ButtonGroup","grouped","ParsedDeviceInfo","_data","icon","description","DeviceInfo","buttonSuccess","green","wrapper","buttonProgress","Alarmclock","dataFromCache","parsedDataFromCache","undefined","setData","timeDialogOpen","setTimeDialogOpen","selectedDate","setSelectedDate","handleTestAlarm","setTimeout","handleSwitchState","alarmState","handleSendAlarmTime","alarmclockData","stringify","deviceInfo","temperature","heatIndex","path","mdiThermometer","humidity","mdiWater","remainingTime","mdiClock","alarmTime","mdiAlarm","utils","DateFnsUtils","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","minutesStep","ampm","KeyboardButtonProps","DialogActions","Watermixer","handleStartMixing","newData","seconds","isTimerOn","remainingSeconds","Math","floor","LoginLoading","textAlign","transform","CircularProgress","getLoginPage","App","isLoggedIn","isAttemptedToLogin","currentPage","handleSetPage","page","isMobile","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db61f82d.chunk.js","sourcesContent":["import {AlarmclockData} from '@gbaranski/types';\n\nconst remoteUrl = 'https://api.gbaranski.com';\n\nfunction getHeaders() {\n  const headers = new Headers();\n  headers.append('username', localStorage.getItem('username') || '');\n  headers.append('password', localStorage.getItem('password') || '');\n  return headers;\n}\n\nexport const login = async () => {\n  const loginPageUrl = `${remoteUrl}/api/login`;\n  const res = await fetch(loginPageUrl, {\n    method: 'POST',\n    headers: getHeaders(),\n  });\n  return res.status === 200;\n};\n\nexport async function getDeviceStatus() {\n  const alarmClockArrayUrl = `${remoteUrl}/api/getDeviceStatus`;\n  const res = await fetch(alarmClockArrayUrl, {\n    method: 'GET',\n    headers: getHeaders(),\n  });\n  const json = await res.json();\n\n  return await JSON.parse(json);\n}\nexport async function getRequestHistory() {\n  const getRequestHistoryUrl = `${remoteUrl}/api/getHistory`;\n  const res = await fetch(getRequestHistoryUrl, {\n    method: 'GET',\n    headers: getHeaders(),\n  });\n\n  const json = await res.json();\n  return json;\n}\n\nexport async function getAlarmClockData(): Promise<AlarmclockData> {\n  const alarmClockDataUrl = `${remoteUrl}/alarmclock/getData`;\n  const res = await fetch(alarmClockDataUrl, {\n    method: 'GET',\n    headers: getHeaders(),\n  });\n  const json = await res.json();\n\n  console.log(JSON.parse(await json));\n  return await JSON.parse(json);\n}\n\nexport async function getAlarmclockTemperatureArray() {\n  const alarmClockArrayUrl = `${remoteUrl}/alarmclock/getTempArray`;\n  const res = await fetch(alarmClockArrayUrl, {\n    method: 'GET',\n    headers: getHeaders(),\n  });\n  const json = await res.json();\n\n  return await JSON.parse(json);\n}\n\nexport async function sendTimeRequest(date: Date) {\n  const formattedTime = `${date.getHours()}:${date.getMinutes()}`;\n  const headers = getHeaders();\n  headers.append('time', formattedTime);\n  const res = await fetch(`${remoteUrl}/alarmclock/setTime`, {\n    method: 'POST',\n    headers,\n  });\n  return res.ok;\n}\n\nexport async function switchAlarmState(state: number) {\n  const headers = getHeaders();\n\n  headers.append('state', String(+!state));\n  const res = await fetch(`${remoteUrl}/alarmclock/switchState`, {\n    method: 'POST',\n    headers,\n  });\n  return res.ok;\n}\n\nexport async function testSiren() {\n  const headers = getHeaders();\n  if (headers.get('username') !== 'gbaranski') {\n    return false;\n  } else {\n    const res = await fetch(`${remoteUrl}/alarmclock/testSiren`, {\n      method: 'POST',\n      headers,\n    });\n    return res.ok;\n  }\n}\n\nexport async function getWatermixerData() {\n  const alarmClockDataUrl = `${remoteUrl}/watermixer/getData`;\n  const res = await fetch(alarmClockDataUrl, {\n    method: 'GET',\n    headers: getHeaders(),\n  });\n  const json = await res.json();\n\n  console.log(JSON.parse(await json));\n  return await JSON.parse(json);\n}\n\nexport async function startMixing() {\n  const res = await fetch(`${remoteUrl}/watermixer/startMixing`, {\n    method: 'POST',\n    headers: getHeaders(),\n  });\n  return res.ok;\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {login} from '../../requests';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Made by '}\n      <Link href=\"https://github.com/gbaranski\" target=\"blank\">\n        Grzegorz Baranski\n      </Link>\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(1, 0, 2),\n  },\n}));\n\nexport default function LoginPage(props: {\n  setAttemptedToLogin: any;\n  setLoggedIn: any;\n}) {\n  const classes = useStyles();\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState('');\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    localStorage.setItem('username', username);\n    localStorage.setItem('password', password);\n    const res = await login();\n    if (res) {\n      props.setAttemptedToLogin(true);\n      props.setLoggedIn(true);\n    } else {\n      setSnackbarMessage('Failed logging in');\n      setSnackbarOpen(true);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message={snackbarMessage}\n        action={\n          <React.Fragment>\n            <Button\n              color=\"secondary\"\n              size=\"small\"\n              onClick={handleSnackbarClose}>\n              UNDO\n            </Button>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleSnackbarClose}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          className={classes.form}\n          autoComplete=\"off\"\n          onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Username\"\n            name=\"email\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSubmit}>\n            Sign In\n          </Button>\n        </form>\n      </div>\n      <Box mt={1}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props: any) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport {useTheme} from '@material-ui/core/styles';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n} from 'recharts';\nimport Title from '../../components/title';\n\n// Generate Sales Data\nfunction createData(time: string, amount: number | undefined) {\n  return {time, amount};\n}\n\nconst data = [\n  createData('00:00', 24.5),\n  createData('03:00', 23.5),\n  createData('06:00', 25.6),\n  createData('09:00', 23),\n  createData('12:00', 26.5),\n  createData('15:00', 21.2),\n  createData('18:00', 23.3),\n  createData('21:00', 26.1),\n  createData('24:00', 24.5),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Last 24 hours temperature</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}>\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{textAnchor: 'middle', fill: theme.palette.text.primary}}>\n              Temperature (°C)\n            </Label>\n          </YAxis>\n          <Line\n            type=\"monotone\"\n            dataKey=\"amount\"\n            stroke={theme.palette.primary.main}\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React, {useEffect} from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Title from '../../components/title';\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {getDeviceStatus} from '../../requests';\nimport {DeviceStatus} from '@gbaranski/types';\n\nexport default function Status() {\n  const [deviceStatus, setDeviceStatus] = React.useState<DeviceStatus>({\n    alarmclock: false,\n    watermixer: false,\n    gate: false,\n    garage: false,\n  });\n\n  useEffect(() => {\n    getDeviceStatus().then((res: DeviceStatus) => {\n      setDeviceStatus(res);\n      console.log(res);\n    });\n  }, []);\n\n  const GetAvatar = (props: {state: boolean}) => {\n    if (props.state) {\n      return <CheckCircleIcon style={{color: 'rgb(32, 199, 155)'}} />;\n    } else {\n      return <WarningRoundedIcon style={{color: 'rgb(244, 188, 58)'}} />;\n    }\n  };\n  return (\n    <React.Fragment>\n      <Title>Devices Status</Title>\n      <List>\n        <ListItem key={1}>\n          <ListItemText primary=\"Alarmclock\" secondary=\"192.168.1.110\" />\n          <ListItemAvatar>\n            <GetAvatar state={deviceStatus.alarmclock} />\n          </ListItemAvatar>\n        </ListItem>\n        <ListItem key={2}>\n          <ListItemText primary=\"Watermixer\" secondary=\"192.168.1.120\" />\n          <ListItemAvatar>\n            <GetAvatar state={deviceStatus.watermixer} />\n          </ListItemAvatar>\n        </ListItem>\n        <Divider variant=\"inset\" component=\"li\" />\n        <ListItem key={3}>\n          <ListItemText primary=\"Gate\" secondary=\"192.168.1.1xx\" />\n          <ListItemAvatar>\n            <GetAvatar state={deviceStatus.gate} />\n          </ListItemAvatar>\n        </ListItem>\n        <Divider variant=\"inset\" component=\"li\" />\n        <ListItem key={4}>\n          <ListItemText primary=\"Garage\" secondary=\"192.168.1.1xx\" />\n          <ListItemAvatar>\n            <GetAvatar state={deviceStatus.garage} />\n          </ListItemAvatar>\n        </ListItem>\n        <Divider variant=\"inset\" component=\"li\" />\n      </List>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport {Devices} from '@gbaranski/types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport OpacityIcon from '@material-ui/icons/Opacity';\nimport SettingsRemoteIcon from '@material-ui/icons/SettingsRemote';\nimport InfoIcon from '@material-ui/icons/Info';\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp';\n\nconst Icons = (props: {index: number}) => {\n  switch (props.index) {\n    default:\n    case 0:\n      return <DashboardIcon />;\n    case 1:\n      return <AlarmIcon />;\n    case 2:\n      return <OpacityIcon />;\n    case 3:\n      return <SettingsRemoteIcon />;\n  }\n};\n\nconst primaryText = (index: number) => {\n  if (index === 0) {\n    return 'Dashboard';\n  } else {\n    let returnText = [Object.keys(Devices)[index - 1]];\n    if (returnText[0] === Devices.Gate) {\n      returnText[0] = `${Devices.Gate} & ${Devices.Garage}`;\n    }\n    return returnText;\n  }\n};\n\nconst disabledItems = [Devices.Gate];\n\nconst checkIfDisabledItem = (index: number) => {\n  return disabledItems.includes(Object.values(Devices)[index - 1]);\n};\n\nexport const mainListItems = (props: any) => {\n  return [0, 1, 2, 3].map((_element, index) => (\n    <ListItem\n      button\n      selected={props.currentlyOpen === index}\n      disabled={checkIfDisabledItem(index)}\n      onClick={() => props.setPage(index)}\n      key={index}>\n      <ListItemIcon>\n        <Icons index={index} />\n      </ListItemIcon>\n      <ListItemText primary={primaryText(index)} />\n    </ListItem>\n  ));\n};\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>More</ListSubheader>\n    <ListItem button key={1}>\n      <ListItemIcon>\n        <InfoIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"About website\" />\n    </ListItem>\n    <ListItem button disabled key={2}>\n      <ListItemIcon>\n        <LiveHelpIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Support\" />\n    </ListItem>\n  </div>\n);\n","import React from 'react';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {makeStyles} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarShift: {\n    marginLeft: 240,\n    width: `calc(100% - ${240}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n}));\n\nexport default function Appbar(props: {\n  open: boolean;\n  handleDrawerOpen: any;\n  pageName: string;\n}) {\n  const classes = useStyles();\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, props.open && classes.appBarShift)}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={props.handleDrawerOpen}\n          className={clsx(\n            classes.menuButton,\n            props.open && classes.menuButtonHidden,\n          )}>\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}>\n          {props.pageName}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport {makeStyles, IconButton, Divider, List} from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport {mainListItems, secondaryListItems} from './NavigationList';\nimport Appbar from '../appbar';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n}));\n\ninterface props {\n  open: boolean;\n  handleDrawerOpen: any;\n  handleDrawerClose: any;\n  currentlyOpen: number;\n  setPage: any;\n  pageName: string;\n}\n\nfunction LeftNavigationBar(props: props) {\n  const classes = useStyles();\n  return (\n    <>\n      <Appbar\n        open={props.open}\n        handleDrawerOpen={props.handleDrawerOpen}\n        pageName={props.pageName}\n      />\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(\n            classes.drawerPaper,\n            !props.open && classes.drawerPaperClose,\n          ),\n        }}\n        open={props.open}>\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={props.handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {mainListItems({\n            setPage: props.setPage,\n            currentlyOpen: props.currentlyOpen,\n          })}\n        </List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default LeftNavigationBar;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Made by '}\n      <Link target=\"_blank\" href=\"https://github.com/gbaranski\">\n        Grzegorz Baranski\n      </Link>{' '}\n    </Typography>\n  );\n}\n\nexport default Copyright;\n","import {useRef, useEffect} from 'react';\n\nexport function useInterval(callback: any, delay: number) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      // @ts-ignore\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport function formatOneDigitToDouble(string: number) {\n  return ('0' + String(string)).slice(-2);\n}\nexport function parseDateToDateString(date: Date) {\n  const parsedDate = new Date(date);\n  return (\n    formatOneDigitToDouble(parsedDate.getHours()) +\n    ':' +\n    formatOneDigitToDouble(parsedDate.getMinutes()) +\n    '  ' +\n    formatOneDigitToDouble(parsedDate.getDate()) +\n    '/' +\n    formatOneDigitToDouble(parsedDate.getMonth() + 1) +\n    '/' +\n    parsedDate.getFullYear()\n  );\n}\n","import React, {useEffect} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../../components/title';\nimport {RequestHistory} from '@gbaranski/types';\nimport {getRequestHistory} from '../../requests';\nimport {parseDateToDateString} from '../../helpers';\n\nexport default function Requests() {\n  const [requestHistory, setRequestHistory] = React.useState<any>([{}]);\n\n  useEffect(() => {\n    getRequestHistory().then((res: RequestHistory[]) => {\n      setRequestHistory(res);\n      console.log(res);\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Title>Recent Requests</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>User</TableCell>\n            <TableCell>Request name</TableCell>\n            <TableCell>IP</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {requestHistory.map((row: RequestHistory, index: number) => (\n            <TableRow key={index}>\n              <TableCell>{parseDateToDateString(row.date)}</TableCell>\n              <TableCell>{row.user}</TableCell>\n              <TableCell>{row.requestType}</TableCell>\n              <TableCell>{row.ip}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport Status from '../../components/status';\nimport LeftNavigationBar from '../../components/leftNavigationBar';\nimport Copyright from '../../components/copyright';\nimport Requests from '../../components/requests';\n\nconst drawerWidth = 240;\nconst pageIndex = 0;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard(props: {\n  setPage: any;\n  open: boolean;\n  setOpen: any;\n}) {\n  const classes = useStyles();\n  const handleDrawerOpen = () => {\n    props.setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    props.setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <LeftNavigationBar\n        open={props.open}\n        handleDrawerClose={handleDrawerClose}\n        handleDrawerOpen={handleDrawerOpen}\n        currentlyOpen={pageIndex}\n        setPage={props.setPage}\n        pageName=\"Dashboard\"\n      />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Status />\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Requests />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React, {useEffect} from 'react';\nimport {useTheme} from '@material-ui/core/styles';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport Title from '../../components/title';\nimport moment from 'moment';\nimport {getAlarmclockTemperatureArray} from '../../requests';\n\nimport {TempArray} from '@gbaranski/types';\n// Generate Sales Data\n\nexport default function TempChart() {\n  const theme = useTheme();\n  const [tempArray, setTempArray] = React.useState<TempArray[]>();\n\n  useEffect(() => {\n    getAlarmclockTemperatureArray().then((res: TempArray[]) => {\n      setTempArray(res);\n      console.log(res);\n    });\n  }, []);\n  return (\n    <React.Fragment>\n      <Title>Last 24 hours temperature</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={tempArray}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}>\n          <XAxis\n            dataKey=\"unixTime\"\n            domain={['auto', 'auto']}\n            name=\"Time\"\n            type=\"number\"\n            tickFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\n            stroke={theme.palette.text.secondary}>\n            <Label\n              position=\"bottom\"\n              style={{textAnchor: 'middle', fill: theme.palette.text.primary}}>\n              Date (HH:mm)\n            </Label>\n          </XAxis>\n          <YAxis\n            dataKey=\"temp\"\n            name=\"Temperature\"\n            stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{textAnchor: 'middle', fill: theme.palette.text.primary}}>\n              Temperature (°C)\n            </Label>\n          </YAxis>\n          <Tooltip\n            formatter={(text) => text + '°C'}\n            labelFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\n          />\n          <Legend formatter={() => 'Temperature °C'} align=\"right\" />\n          <Line\n            type=\"monotone\"\n            dataKey=\"temp\"\n            stroke={theme.palette.primary.main}\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Title from '../title';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\ninterface DeviceManagerButton {\n  onClick: any;\n  innerText: string;\n}\n\nfunction CreateButtons(props: any) {\n  return props.data.map((button: DeviceManagerButton) => (\n    <Button color=\"primary\" onClick={button.onClick} variant=\"outlined\">\n      {button.innerText}\n    </Button>\n  ));\n}\n\nfunction DeviceManager(props: {data: DeviceManagerButton[]}) {\n  return (\n    <React.Fragment>\n      <Title>Manage Device</Title>\n      <ButtonGroup\n        color=\"primary\"\n        aria-label=\"outlined primary button group grouped\">\n        <CreateButtons data={props.data} root grouped />\n      </ButtonGroup>\n    </React.Fragment>\n  );\n}\n\nexport default DeviceManager;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Title from '../title';\n\ninterface deviceInfoElement {\n  title: string;\n  description: string;\n  icon?: any;\n}\n\nfunction ParsedDeviceInfo(props: any) {\n  return props.data.map((_data: deviceInfoElement, index: number) => (\n    <ListItem key={index}>\n      {_data.icon && <ListItemAvatar>{_data.icon}</ListItemAvatar>}\n      <ListItemText primary={_data.title} secondary={_data.description} />\n    </ListItem>\n  ));\n}\n\nfunction DeviceInfo(props: any) {\n  return (\n    <React.Fragment>\n      <Title>Device Info</Title>\n      <ParsedDeviceInfo data={props.data} />\n    </React.Fragment>\n  );\n}\n\nexport default DeviceInfo;\n","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport LeftNavigationBar from '../../components/leftNavigationBar';\nimport TempChart from '../../components/tempChart';\nimport Copyright from '../../components/copyright';\nimport {mdiThermometer} from '@mdi/js';\nimport {mdiWater} from '@mdi/js';\nimport {mdiClock} from '@mdi/js';\nimport {mdiAlarm} from '@mdi/js';\nimport Icon from '@mdi/react';\nimport DeviceManager from '../../components/deviceManager';\nimport DeviceInfo from '../../components/deviceInfo';\nimport green from '@material-ui/core/colors/green';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n} from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {AlarmclockData} from '@gbaranski/types';\nimport {useInterval} from '../../helpers';\nimport {\n  getAlarmClockData,\n  sendTimeRequest,\n  switchAlarmState,\n  testSiren,\n} from '../../requests';\n\nconst drawerWidth = 240;\nconst pageIndex = 1;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nfunction Alarmclock(props: {setPage: any; open: boolean; setOpen: any}) {\n  const classes = useStyles();\n\n  const handleDrawerOpen = () => {\n    props.setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    props.setOpen(false);\n  };\n\n  const dataFromCache = localStorage.getItem('lastAlarmclockData');\n  const parsedDataFromCache: AlarmclockData | undefined = dataFromCache\n    ? JSON.parse(dataFromCache)\n    : undefined;\n\n  const [data, setData] = React.useState<AlarmclockData | undefined>(\n    parsedDataFromCache || undefined,\n  );\n  const [timeDialogOpen, setTimeDialogOpen] = React.useState(false);\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState('');\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  const handleTestAlarm = async () => {\n    const res = await testSiren();\n    if (res) {\n      setSnackbarMessage('Success testing siren!');\n    } else {\n      setSnackbarMessage(\n        \"Server is down, or You don't have permisison for that :)!\",\n      );\n    }\n    setSnackbarOpen(true);\n    setTimeout(() => {\n      setSnackbarOpen(false);\n    }, 1000);\n  };\n  const handleSwitchState = async () => {\n    console.log('Switching alamr state');\n    if (data) {\n      await switchAlarmState(data.alarmState);\n      setSnackbarMessage('Success changing alarm state!');\n      setSnackbarOpen(true);\n      setTimeout(() => {\n        setSnackbarOpen(false);\n      }, 1000);\n    } else {\n      setSnackbarMessage('Something went wrong!');\n      setSnackbarOpen(true);\n      setTimeout(() => {\n        setSnackbarOpen(false);\n      }, 1000);\n    }\n  };\n\n  const handleSendAlarmTime = async () => {\n    setTimeDialogOpen(false);\n    const ok = await sendTimeRequest(selectedDate);\n    if (ok) {\n      setSnackbarMessage('Success changing alarm time!');\n    } else {\n      setSnackbarMessage('Failed during changing alarm time!');\n    }\n    setSnackbarOpen(true);\n    setTimeout(() => {\n      setSnackbarOpen(false);\n    }, 1000);\n  };\n\n  const handleDateChange = (date: any) => {\n    setSelectedDate(date);\n  };\n\n  const handleSetAlarmTime = () => {\n    setTimeDialogOpen(true);\n  };\n\n  useInterval(async () => {\n    const alarmclockData = await getAlarmClockData();\n    setData(alarmclockData);\n    localStorage.setItem('lastAlarmclockData', JSON.stringify(alarmclockData));\n  }, 1000);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const deviceInfo = [\n    {\n      title: 'Temperature',\n      description: data?.temperature + '°C / ' + data?.heatIndex + '°C' || '',\n      icon: <Icon path={mdiThermometer} size={2} color=\"rgb(117,117,117)\" />,\n    },\n    {\n      title: 'Humidity',\n      description: data?.humidity + '%' || '',\n      icon: <Icon path={mdiWater} size={2} color=\"rgb(117,117,117)\" />,\n    },\n    {\n      title: 'Remaining time',\n      description: data?.remainingTime || '',\n      icon: (\n        <Icon\n          path={mdiClock}\n          size={1.5}\n          color=\"rgb(117,117,117)\"\n          style={{marginLeft: '8%'}}\n        />\n      ),\n    },\n\n    {\n      title: 'Alarm time',\n      description:\n        data?.alarmTime + `${data?.alarmState ? ' ON' : ' OFF'}` || '',\n      icon: (\n        <Icon\n          path={mdiAlarm}\n          size={1.5}\n          color=\"rgb(117,117,117)\"\n          style={{marginLeft: '8%'}}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <div className={classes.root}>\n        <Dialog\n          open={timeDialogOpen}\n          onClose={() => setTimeDialogOpen(false)}\n          aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Set new Alarm Time</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Use time input below to set new alarm time, press Save to save\n              that to remote ESP microcontroller\n            </DialogContentText>\n            <KeyboardTimePicker\n              margin=\"normal\"\n              id=\"time-picker\"\n              label=\"Time picker\"\n              value={selectedDate}\n              required\n              onChange={handleDateChange}\n              minutesStep={5}\n              ampm={false}\n              KeyboardButtonProps={{\n                'aria-label': 'change time',\n              }}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setTimeDialogOpen(false)} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={() => handleSendAlarmTime()} color=\"primary\">\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={snackbarOpen}\n          autoHideDuration={6000}\n          onClose={handleSnackbarClose}\n          message={snackbarMessage}\n          action={\n            <React.Fragment>\n              <Button\n                color=\"secondary\"\n                size=\"small\"\n                onClick={handleSnackbarClose}>\n                UNDO\n              </Button>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={handleSnackbarClose}>\n                <CloseIcon fontSize=\"small\" />\n              </IconButton>\n            </React.Fragment>\n          }\n        />\n\n        <CssBaseline />\n\n        <LeftNavigationBar\n          open={props.open}\n          handleDrawerClose={handleDrawerClose}\n          handleDrawerOpen={handleDrawerOpen}\n          currentlyOpen={pageIndex}\n          setPage={props.setPage}\n          pageName=\"Alarmclock\"\n        />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={8} lg={9}>\n                <Paper className={fixedHeightPaper}>\n                  <TempChart />\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={4} lg={3}>\n                <Paper className={fixedHeightPaper}>\n                  <DeviceInfo data={deviceInfo} />\n                </Paper>\n              </Grid>\n              <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                  <DeviceManager\n                    data={[\n                      {\n                        onClick: handleTestAlarm,\n                        innerText: 'Test alarm',\n                      },\n                      {\n                        onClick: handleSetAlarmTime,\n                        innerText: 'Set alarm time',\n                      },\n                      {\n                        onClick: handleSwitchState,\n                        innerText: 'Switch alarm state',\n                      },\n                    ]}\n                  />\n                </Paper>\n              </Grid>\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default Alarmclock;\n","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport LeftNavigationBar from '../../components/leftNavigationBar';\nimport Copyright from '../../components/copyright';\nimport {mdiWater} from '@mdi/js';\nimport {mdiClock} from '@mdi/js';\nimport Icon from '@mdi/react';\nimport DeviceManager from '../../components/deviceManager';\nimport DeviceInfo from '../../components/deviceInfo';\nimport green from '@material-ui/core/colors/green';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {MuiPickersUtilsProvider} from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {WatermixerData} from '@gbaranski/types';\nimport {useInterval} from '../../helpers';\nimport {getWatermixerData, startMixing} from '../../requests';\n\nconst drawerWidth = 240;\nconst pageIndex = 2;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nfunction parseSeconds(seconds: number) {\n  return `${Math.floor((seconds / 60) % 60)}m ${seconds % 60}s`;\n}\n\nfunction Watermixer(props: {setPage: any; open: boolean; setOpen: any}) {\n  const classes = useStyles();\n\n  const handleDrawerOpen = () => {\n    props.setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    props.setOpen(false);\n  };\n\n  const dataFromCache = localStorage.getItem('lastWatermixerData');\n  const parsedDataFromCache: WatermixerData | undefined = dataFromCache\n    ? JSON.parse(dataFromCache)\n    : undefined;\n\n  const [data, setData] = React.useState<WatermixerData | undefined>(\n    parsedDataFromCache || undefined,\n  );\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState('');\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  const handleStartMixing = async () => {\n    const res = await startMixing();\n    if (res) {\n      setSnackbarMessage('Success mixing water!');\n    } else {\n      setSnackbarMessage('Success mixing water!');\n    }\n    setSnackbarOpen(true);\n    setTimeout(() => {\n      setSnackbarOpen(false);\n    }, 1000);\n  };\n\n  useInterval(async () => {\n    const newData = await getWatermixerData();\n    setData(newData);\n    localStorage.setItem('lastWatermixerData', JSON.stringify(newData));\n  }, 1000);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const deviceInfo = [\n    {\n      title: 'Current state',\n      description: `Water should be ${data?.isTimerOn ? 'warm' : 'cold'}`,\n      icon: <Icon path={mdiWater} size={2} color=\"rgb(117,117,117)\" />,\n    },\n    {\n      title: 'Remaining time',\n      description: data ? parseSeconds(data.remainingSeconds) : '0',\n      icon: (\n        <Icon\n          path={mdiClock}\n          size={1.5}\n          color=\"rgb(117,117,117)\"\n          style={{marginLeft: '8%'}}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <div className={classes.root}>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={snackbarOpen}\n          autoHideDuration={6000}\n          onClose={handleSnackbarClose}\n          message={snackbarMessage}\n          action={\n            <React.Fragment>\n              <Button\n                color=\"secondary\"\n                size=\"small\"\n                onClick={handleSnackbarClose}>\n                UNDO\n              </Button>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={handleSnackbarClose}>\n                <CloseIcon fontSize=\"small\" />\n              </IconButton>\n            </React.Fragment>\n          }\n        />\n\n        <CssBaseline />\n        <LeftNavigationBar\n          open={props.open}\n          handleDrawerClose={handleDrawerClose}\n          handleDrawerOpen={handleDrawerOpen}\n          currentlyOpen={pageIndex}\n          setPage={props.setPage}\n          pageName=\"Watermixer\"\n        />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={8} lg={12}>\n                <Paper className={fixedHeightPaper}>\n                  <DeviceInfo data={deviceInfo} />\n                </Paper>\n              </Grid>\n              <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                  <DeviceManager\n                    data={[\n                      {\n                        onClick: handleStartMixing,\n                        innerText: 'Start mixing',\n                      },\n                    ]}\n                  />\n                </Paper>\n              </Grid>\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default Watermixer;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Title from '../../components/title';\n\nfunction LoginLoading() {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        textAlign: 'center',\n        transform: 'translate(-50%, -50%)',\n      }}>\n      <CircularProgress />\n      <Title>Loading</Title>\n    </div>\n  );\n}\n\nexport default LoginLoading;\n","import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport LoginPage from './pages/login';\nimport Dashboard from './pages/dashboard';\nimport Alarmclock from './pages/alarmclock';\nimport Watermixer from './pages/watermixer';\nimport {isMobile} from 'react-device-detect';\nimport LoginLoading from './pages/loginLoading';\nimport {login} from './requests';\n\nconst getLoginPage = async (setLoggedIn: any, setAttemptedToLogin: any) => {\n  const res = login();\n  if (await res) {\n    setLoggedIn(true);\n  }\n  res.then(() => setAttemptedToLogin(true));\n};\n\nconst App = () => {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isAttemptedToLogin, setAttemptedToLogin] = useState(false);\n  const [currentPage, setPage] = useState(0);\n  const [open, setOpen] = useState(true);\n\n  if (!isAttemptedToLogin) {\n    getLoginPage(setLoggedIn, setAttemptedToLogin);\n    return <LoginLoading />;\n  }\n  if (!isLoggedIn && isAttemptedToLogin) {\n    return (\n      <LoginPage\n        setAttemptedToLogin={setAttemptedToLogin}\n        setLoggedIn={setLoggedIn}\n      />\n    );\n  }\n\n  const handleSetPage = (page: number) => {\n    if (isMobile) {\n      setOpen(false);\n    }\n    setPage(page);\n  };\n\n  switch (currentPage) {\n    default:\n    case 0:\n      return (\n        <Dashboard setPage={handleSetPage} open={open} setOpen={setOpen} />\n      );\n    case 1:\n      return (\n        <Alarmclock setPage={handleSetPage} open={open} setOpen={setOpen} />\n      );\n    case 2:\n      return (\n        <Watermixer setPage={handleSetPage} open={open} setOpen={setOpen} />\n      );\n  }\n};\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  // @ts-ignore\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}