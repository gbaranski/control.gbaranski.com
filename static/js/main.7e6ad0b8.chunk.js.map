{"version":3,"sources":["components/title/index.tsx","pages/dashboard/Chart.tsx","requests.ts","components/status/index.tsx","components/copyright/index.tsx","helpers.ts","services/firebase.ts","components/requests/index.tsx","pages/dashboard/index.tsx","components/tempChart/index.tsx","components/deviceManager/index.tsx","components/deviceInfo/index.tsx","pages/alarmclock/index.tsx","pages/watermixer/index.tsx","routes.tsx","pages/login/index.tsx","pages/loginLoading/index.tsx","components/leftNavigationBar/NavigationList.tsx","components/appbar/index.tsx","components/leftNavigationBar/index.tsx","index.tsx"],"names":["Title","props","Typography","component","variant","color","gutterBottom","children","createData","time","amount","data","Chart","theme","useTheme","Fragment","margin","top","right","bottom","left","dataKey","stroke","palette","text","secondary","angle","position","style","textAnchor","fill","primary","type","main","dot","remoteUrl","getHeaders","headers","Headers","append","localStorage","getItem","login","a","loginPageUrl","fetch","method","res","status","alarmClockArrayUrl","json","JSON","parse","getAlarmClockData","alarmClockDataUrl","console","log","sendTimeRequest","date","formattedTime","getHours","getMinutes","ok","switchAlarmState","state","String","testSiren","get","getWatermixerData","startMixing","Status","React","useState","alarmclock","watermixer","gate","garage","deviceStatus","setDeviceStatus","useEffect","getDeviceStatus","then","GetAvatar","List","ListItem","key","ListItemText","ListItemAvatar","Divider","Copyright","align","Link","target","href","useInterval","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","formatOneDigitToDouble","string","slice","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firebase","firestore","collection","requestHistory","forEach","doc","docData","push","tempHistory","Requests","setRequestHistory","getRequestHistory","reqHistory","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","index","parsedDate","Date","getDate","getMonth","getFullYear","parseDateToDateString","unixTime","user","requestPath","ip","country","userAgent","useStyles","makeStyles","root","display","appBarSpacer","mixins","toolbar","content","flexGrow","height","overflow","container","paddingTop","spacing","paddingBottom","paper","padding","flexDirection","fixedHeight","Dashboard","classes","fixedHeightPaper","clsx","className","CssBaseline","Container","maxWidth","Grid","item","xs","md","lg","Paper","Box","pt","TempChart","tempArray","setTempArray","getTempHistory","sort","elemA","elemB","domain","name","tickFormatter","moment","format","formatter","labelFormatter","CreateButtons","button","Button","onClick","innerText","DeviceManager","ButtonGroup","aria-label","grouped","ParsedDeviceInfo","_data","icon","title","description","DeviceInfo","Alarmclock","dataFromCache","parsedDataFromCache","undefined","setData","timeDialogOpen","setTimeDialogOpen","selectedDate","setSelectedDate","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","handleSnackbarClose","handleTestAlarm","setTimeout","handleSwitchState","alarmState","handleSendAlarmTime","alarmclockData","setItem","stringify","deviceInfo","temperature","heatIndex","path","mdiThermometer","humidity","mdiWater","remainingTime","mdiClock","marginLeft","alarmTime","mdiAlarm","utils","DateFnsUtils","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","label","value","required","onChange","minutesStep","ampm","KeyboardButtonProps","DialogActions","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","IconButton","fontSize","Watermixer","handleStartMixing","newData","seconds","isTimerOn","remainingSeconds","Math","floor","routes","to","pathname","exact","protected","marginTop","alignItems","avatar","backgroundColor","form","width","submit","LoginPage","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","setAttemptedToLogin","setLoggedIn","Avatar","autoComplete","onSubmit","TextField","fullWidth","autoFocus","mt","LoginLoading","textAlign","transform","CircularProgress","Icons","primaryText","returnText","Object","keys","DeviceList","Gate","Garage","disabledItems","FancyLink","forwardRef","disabled","includes","values","navigate","selected","ListItemIcon","secondaryListItems","ListSubheader","inset","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","paddingRight","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","Appbar","AppBar","Toolbar","edge","handleDrawerOpen","noWrap","useLocation","charAt","toUpperCase","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","toolbarIcon","justifyContent","LeftNavigationBar","Drawer","handleDrawerClose","_element","getLink","activeClassName","getLoginPage","App","initializeApp","analytics","isLoggedIn","isAttemptedToLogin","setOpen","SafeRoute","rest","render","location","from","route","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e6ad0b8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props: any) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport {useTheme} from '@material-ui/core/styles';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n} from 'recharts';\nimport Title from '../../components/title';\n\n// Generate Sales Data\nfunction createData(time: string, amount: number | undefined) {\n  return {time, amount};\n}\n\nconst data = [\n  createData('00:00', 24.5),\n  createData('03:00', 23.5),\n  createData('06:00', 25.6),\n  createData('09:00', 23),\n  createData('12:00', 26.5),\n  createData('15:00', 21.2),\n  createData('18:00', 23.3),\n  createData('21:00', 26.1),\n  createData('24:00', 24.5),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Last 24 hours temperature</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}>\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{textAnchor: 'middle', fill: theme.palette.text.primary}}>\n              Temperature (°C)\n            </Label>\n          </YAxis>\n          <Line\n            type=\"monotone\"\n            dataKey=\"amount\"\n            stroke={theme.palette.primary.main}\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import {AlarmclockData} from '@gbaranski/types';\n\nconst remoteUrl = 'https://api.gbaranski.com';\n\nfunction getHeaders() {\n  const headers = new Headers();\n  headers.append('username', localStorage.getItem('username') || '');\n  headers.append('password', localStorage.getItem('password') || '');\n  return headers;\n}\n\nexport const login = async () => {\n  const loginPageUrl = `${remoteUrl}/api/login`;\n  const res = await fetch(loginPageUrl, {\n    method: 'POST',\n    headers: getHeaders(),\n  });\n  return res.status === 200;\n};\n\nexport async function getDeviceStatus() {\n  const alarmClockArrayUrl = `${remoteUrl}/api/getDeviceStatus`;\n  const res = await fetch(alarmClockArrayUrl, {\n    method: 'GET',\n    headers: getHeaders(),\n  });\n  const json = await res.json();\n\n  return await JSON.parse(json);\n}\nexport async function getAlarmClockData(): Promise<AlarmclockData> {\n  const alarmClockDataUrl = `${remoteUrl}/alarmclock/getData`;\n  const res = await fetch(alarmClockDataUrl, {\n    method: 'GET',\n    headers: getHeaders(),\n  });\n  const json = await res.json();\n\n  console.log(JSON.parse(await json));\n  return await JSON.parse(json);\n}\n\nexport async function sendTimeRequest(date: Date) {\n  const formattedTime = `${date.getHours()}:${date.getMinutes()}`;\n  const headers = getHeaders();\n  headers.append('time', formattedTime);\n  const res = await fetch(`${remoteUrl}/alarmclock/setTime`, {\n    method: 'POST',\n    headers,\n  });\n  return res.ok;\n}\n\nexport async function switchAlarmState(state: number) {\n  const headers = getHeaders();\n\n  headers.append('state', String(+!state));\n  const res = await fetch(`${remoteUrl}/alarmclock/switchState`, {\n    method: 'POST',\n    headers,\n  });\n  return res.ok;\n}\n\nexport async function testSiren() {\n  const headers = getHeaders();\n  if (headers.get('username') !== 'gbaranski') {\n    return false;\n  } else {\n    const res = await fetch(`${remoteUrl}/alarmclock/testSiren`, {\n      method: 'POST',\n      headers,\n    });\n    return res.ok;\n  }\n}\n\nexport async function getWatermixerData() {\n  const alarmClockDataUrl = `${remoteUrl}/watermixer/getData`;\n  const res = await fetch(alarmClockDataUrl, {\n    method: 'GET',\n    headers: getHeaders(),\n  });\n  const json = await res.json();\n\n  console.log(JSON.parse(await json));\n  return await JSON.parse(json);\n}\n\nexport async function startMixing() {\n  const res = await fetch(`${remoteUrl}/watermixer/startMixing`, {\n    method: 'POST',\n    headers: getHeaders(),\n  });\n  return res.ok;\n}\n","import React, {useEffect} from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Title from '../../components/title';\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {getDeviceStatus} from '../../requests';\nimport {DeviceStatus} from '@gbaranski/types';\n\nexport default function Status() {\n  const [deviceStatus, setDeviceStatus] = React.useState<DeviceStatus>({\n    alarmclock: false,\n    watermixer: false,\n    gate: false,\n    garage: false,\n  });\n\n  useEffect(() => {\n    getDeviceStatus().then((res: DeviceStatus) => {\n      setDeviceStatus(res);\n      console.log(res);\n    });\n  }, []);\n\n  const GetAvatar = (props: {state: boolean}) => {\n    if (props.state) {\n      return <CheckCircleIcon style={{color: 'rgb(32, 199, 155)'}} />;\n    } else {\n      return <WarningRoundedIcon style={{color: 'rgb(244, 188, 58)'}} />;\n    }\n  };\n  return (\n    <React.Fragment>\n      <Title>Devices Status</Title>\n      <List>\n        <ListItem key={1}>\n          <ListItemText primary=\"Alarmclock\" secondary=\"192.168.1.110\" />\n          <ListItemAvatar>\n            <GetAvatar state={deviceStatus.alarmclock} />\n          </ListItemAvatar>\n        </ListItem>\n        <ListItem key={2}>\n          <ListItemText primary=\"Watermixer\" secondary=\"192.168.1.120\" />\n          <ListItemAvatar>\n            <GetAvatar state={deviceStatus.watermixer} />\n          </ListItemAvatar>\n        </ListItem>\n        <Divider variant=\"inset\" component=\"li\" />\n        <ListItem key={3}>\n          <ListItemText primary=\"Gate\" secondary=\"192.168.1.1xx\" />\n          <ListItemAvatar>\n            <GetAvatar state={deviceStatus.gate} />\n          </ListItemAvatar>\n        </ListItem>\n        <Divider variant=\"inset\" component=\"li\" />\n        <ListItem key={4}>\n          <ListItemText primary=\"Garage\" secondary=\"192.168.1.1xx\" />\n          <ListItemAvatar>\n            <GetAvatar state={deviceStatus.garage} />\n          </ListItemAvatar>\n        </ListItem>\n        <Divider variant=\"inset\" component=\"li\" />\n      </List>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Made by '}\n      <Link target=\"_blank\" href=\"https://github.com/gbaranski\">\n        Grzegorz Baranski\n      </Link>{' '}\n    </Typography>\n  );\n}\n\nexport default Copyright;\n","import {useRef, useEffect} from 'react';\n\nexport function useInterval(callback: any, delay: number) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      // @ts-ignore\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport function formatOneDigitToDouble(string: number) {\n  return ('0' + String(string)).slice(-2);\n}\nexport function parseDateToDateString(date: Date) {\n  const parsedDate = new Date(date);\n  return (\n    formatOneDigitToDouble(parsedDate.getHours()) +\n    ':' +\n    formatOneDigitToDouble(parsedDate.getMinutes()) +\n    '  ' +\n    formatOneDigitToDouble(parsedDate.getDate()) +\n    '/' +\n    formatOneDigitToDouble(parsedDate.getMonth() + 1) +\n    '/' +\n    parsedDate.getFullYear()\n  );\n}\n\nexport function capitalizeFirst(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","import firebase from 'firebase';\nimport {RequestHistory, TempHistory} from '@gbaranski/types';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCpRLmvfBf-SpwkDUHKa_vrbEeIvSzHNOY',\n  authDomain: 'controlhome-7bbcc.firebaseapp.com',\n  databaseURL: 'https://controlhome-7bbcc.firebaseio.com',\n  projectId: 'controlhome-7bbcc',\n  storageBucket: 'controlhome-7bbcc.appspot.com',\n  messagingSenderId: '794654805763',\n  appId: '1:794654805763:web:9178272307d06e5eade336',\n  measurementId: 'G-J8271YJZER',\n};\n\nexport function initializeFirebase() {\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n}\n\nexport async function getRequestHistory() {\n  const db = firebase.firestore();\n  const collection = db.collection('requests').get();\n  const requestHistory: RequestHistory[] = [];\n  (await collection).forEach((doc) => {\n    const docData: RequestHistory = doc.data() as RequestHistory;\n    requestHistory.push(docData);\n  });\n  console.log(requestHistory);\n  return requestHistory;\n}\n\nexport async function getTempHistory() {\n  const db = firebase.firestore();\n  const collection = db.collection('temp-history').get();\n  const tempHistory: TempHistory[] = [];\n  (await collection).forEach((doc) => {\n    const docData: TempHistory = doc.data() as TempHistory;\n    tempHistory.push(docData);\n  });\n  console.log(tempHistory);\n  return tempHistory;\n}\n","import React, {useEffect} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../../components/title';\nimport {RequestHistory} from '@gbaranski/types';\nimport {parseDateToDateString} from '../../helpers';\nimport {getRequestHistory} from '../../services/firebase';\n\nexport default function Requests() {\n  const [requestHistory, setRequestHistory] = React.useState<any>([{}]);\n\n  useEffect(() => {\n    getRequestHistory().then((reqHistory: RequestHistory[]) => {\n      setRequestHistory(reqHistory);\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Title>Recent Requests</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>User</TableCell>\n            <TableCell>Request</TableCell>\n            <TableCell>IP</TableCell>\n            <TableCell>Country</TableCell>\n            <TableCell>User-agent</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {requestHistory.map((row: RequestHistory, index: number) => (\n            <TableRow key={index}>\n              <TableCell>\n                {parseDateToDateString(new Date(row.unixTime))}\n              </TableCell>\n              <TableCell>{row.user}</TableCell>\n              <TableCell>{row.requestPath}</TableCell>\n              <TableCell>{row.ip}</TableCell>\n              <TableCell>{row.country}</TableCell>\n              <TableCell>{row.userAgent}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Chart from './Chart';\nimport Status from '../../components/status';\nimport Copyright from '../../components/copyright';\nimport Requests from '../../components/requests';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Status />\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Requests />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React, {useEffect} from 'react';\nimport {useTheme} from '@material-ui/core/styles';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Label,\n  ResponsiveContainer,\n  Tooltip,\n  Legend,\n} from 'recharts';\nimport moment from 'moment';\nimport Title from '../../components/title';\nimport {TempHistory} from '@gbaranski/types';\nimport {getTempHistory} from '../../services/firebase';\n\nexport default function TempChart() {\n  const theme = useTheme();\n  const [tempArray, setTempArray] = React.useState<TempHistory[]>();\n\n  useEffect(() => {\n    getTempHistory().then((res: TempHistory[]) => {\n      setTempArray(\n        res.sort(\n          (elemA: TempHistory, elemB: TempHistory) =>\n            elemA.unixTime - elemB.unixTime,\n        ),\n      );\n    });\n  }, []);\n  return (\n    <React.Fragment>\n      <Title>Last 24 hours temperature</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={tempArray}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}>\n          <XAxis\n            dataKey=\"unixTime\"\n            domain={['auto', 'auto']}\n            name=\"Time\"\n            type=\"number\"\n            tickFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\n            stroke={theme.palette.text.secondary}>\n            <Label\n              position=\"bottom\"\n              style={{textAnchor: 'middle', fill: theme.palette.text.primary}}>\n              Date (HH:mm)\n            </Label>\n          </XAxis>\n          <YAxis\n            dataKey=\"temperature\"\n            name=\"Temperature\"\n            stroke={theme.palette.text.secondary}>\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{textAnchor: 'middle', fill: theme.palette.text.primary}}>\n              Temperature (°C)\n            </Label>\n          </YAxis>\n          <Tooltip\n            formatter={(text) => text + '°C'}\n            labelFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\n          />\n          <Legend formatter={() => 'Temperature °C'} align=\"right\" />\n          <Line\n            type=\"monotone\"\n            dataKey=\"temperature\"\n            stroke={theme.palette.primary.main}\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Title from '../title';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\ninterface DeviceManagerButton {\n  onClick: any;\n  innerText: string;\n}\n\nfunction CreateButtons(props: any) {\n  return props.data.map((button: DeviceManagerButton) => (\n    <Button color=\"primary\" onClick={button.onClick} variant=\"outlined\">\n      {button.innerText}\n    </Button>\n  ));\n}\n\nfunction DeviceManager(props: {data: DeviceManagerButton[]}) {\n  return (\n    <React.Fragment>\n      <Title>Manage Device</Title>\n      <ButtonGroup\n        color=\"primary\"\n        aria-label=\"outlined primary button group grouped\">\n        <CreateButtons data={props.data} root grouped />\n      </ButtonGroup>\n    </React.Fragment>\n  );\n}\n\nexport default DeviceManager;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Title from '../title';\n\ninterface deviceInfoElement {\n  title: string;\n  description: string;\n  icon?: any;\n}\n\nfunction ParsedDeviceInfo(props: any) {\n  return props.data.map((_data: deviceInfoElement, index: number) => (\n    <ListItem key={index}>\n      {_data.icon && <ListItemAvatar>{_data.icon}</ListItemAvatar>}\n      <ListItemText primary={_data.title} secondary={_data.description} />\n    </ListItem>\n  ));\n}\n\nfunction DeviceInfo(props: any) {\n  return (\n    <React.Fragment>\n      <Title>Device Info</Title>\n      <ParsedDeviceInfo data={props.data} />\n    </React.Fragment>\n  );\n}\n\nexport default DeviceInfo;\n","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TempChart from '../../components/tempChart';\nimport Copyright from '../../components/copyright';\nimport {mdiThermometer} from '@mdi/js';\nimport {mdiWater} from '@mdi/js';\nimport {mdiClock} from '@mdi/js';\nimport {mdiAlarm} from '@mdi/js';\nimport Icon from '@mdi/react';\nimport DeviceManager from '../../components/deviceManager';\nimport DeviceInfo from '../../components/deviceInfo';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n} from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {AlarmclockData} from '@gbaranski/types';\nimport {useInterval} from '../../helpers';\nimport {\n  getAlarmClockData,\n  sendTimeRequest,\n  switchAlarmState,\n  testSiren,\n} from '../../requests';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction Alarmclock() {\n  const classes = useStyles();\n\n  const dataFromCache = localStorage.getItem('lastAlarmclockData');\n  const parsedDataFromCache: AlarmclockData | undefined = dataFromCache\n    ? JSON.parse(dataFromCache)\n    : undefined;\n\n  const [data, setData] = React.useState<AlarmclockData | undefined>(\n    parsedDataFromCache || undefined,\n  );\n  const [timeDialogOpen, setTimeDialogOpen] = React.useState(false);\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState('');\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  const handleTestAlarm = async () => {\n    const res = await testSiren();\n    if (res) {\n      setSnackbarMessage('Success testing siren!');\n    } else {\n      setSnackbarMessage(\n        \"Server is down, or You don't have permisison for that :)!\",\n      );\n    }\n    setSnackbarOpen(true);\n    setTimeout(() => {\n      setSnackbarOpen(false);\n    }, 1000);\n  };\n  const handleSwitchState = async () => {\n    console.log('Switching alamr state');\n    if (data) {\n      await switchAlarmState(data.alarmState);\n      setSnackbarMessage('Success changing alarm state!');\n      setSnackbarOpen(true);\n      setTimeout(() => {\n        setSnackbarOpen(false);\n      }, 1000);\n    } else {\n      setSnackbarMessage('Something went wrong!');\n      setSnackbarOpen(true);\n      setTimeout(() => {\n        setSnackbarOpen(false);\n      }, 1000);\n    }\n  };\n\n  const handleSendAlarmTime = async () => {\n    setTimeDialogOpen(false);\n    const ok = await sendTimeRequest(selectedDate);\n    if (ok) {\n      setSnackbarMessage('Success changing alarm time!');\n    } else {\n      setSnackbarMessage('Failed during changing alarm time!');\n    }\n    setSnackbarOpen(true);\n    setTimeout(() => {\n      setSnackbarOpen(false);\n    }, 1000);\n  };\n\n  const handleDateChange = (date: any) => {\n    setSelectedDate(date);\n  };\n\n  const handleSetAlarmTime = () => {\n    setTimeDialogOpen(true);\n  };\n\n  useInterval(async () => {\n    const alarmclockData = await getAlarmClockData();\n    setData(alarmclockData);\n    localStorage.setItem('lastAlarmclockData', JSON.stringify(alarmclockData));\n  }, 500);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const deviceInfo = [\n    {\n      title: 'Temperature',\n      description: data?.temperature + '°C / ' + data?.heatIndex + '°C' || '',\n      icon: <Icon path={mdiThermometer} size={2} color=\"rgb(117,117,117)\" />,\n    },\n    {\n      title: 'Humidity',\n      description: data?.humidity + '%' || '',\n      icon: <Icon path={mdiWater} size={2} color=\"rgb(117,117,117)\" />,\n    },\n    {\n      title: 'Remaining time',\n      description: data?.remainingTime || '',\n      icon: (\n        <Icon\n          path={mdiClock}\n          size={1.5}\n          color=\"rgb(117,117,117)\"\n          style={{marginLeft: '8%'}}\n        />\n      ),\n    },\n\n    {\n      title: 'Alarm time',\n      description:\n        data?.alarmTime + `${data?.alarmState ? ' ON' : ' OFF'}` || '',\n      icon: (\n        <Icon\n          path={mdiAlarm}\n          size={1.5}\n          color=\"rgb(117,117,117)\"\n          style={{marginLeft: '8%'}}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <div className={classes.root}>\n        <Dialog\n          open={timeDialogOpen}\n          onClose={() => setTimeDialogOpen(false)}\n          aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Set new Alarm Time</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Use time input below to set new alarm time, press Save to save\n              that to remote ESP microcontroller\n            </DialogContentText>\n            <KeyboardTimePicker\n              margin=\"normal\"\n              id=\"time-picker\"\n              label=\"Time picker\"\n              value={selectedDate}\n              required\n              onChange={handleDateChange}\n              minutesStep={5}\n              ampm={false}\n              KeyboardButtonProps={{\n                'aria-label': 'change time',\n              }}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setTimeDialogOpen(false)} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={() => handleSendAlarmTime()} color=\"primary\">\n              Save\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={snackbarOpen}\n          autoHideDuration={6000}\n          onClose={handleSnackbarClose}\n          message={snackbarMessage}\n          action={\n            <React.Fragment>\n              <Button\n                color=\"secondary\"\n                size=\"small\"\n                onClick={handleSnackbarClose}>\n                UNDO\n              </Button>\n              <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={handleSnackbarClose}>\n                <CloseIcon fontSize=\"small\" />\n              </IconButton>\n            </React.Fragment>\n          }\n        />\n\n        <CssBaseline />\n\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={8} lg={9}>\n                <Paper className={fixedHeightPaper}>\n                  <TempChart />\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={4} lg={3}>\n                <Paper className={fixedHeightPaper}>\n                  <DeviceInfo data={deviceInfo} />\n                </Paper>\n              </Grid>\n              <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                  <DeviceManager\n                    data={[\n                      {\n                        onClick: handleTestAlarm,\n                        innerText: 'Test alarm',\n                      },\n                      {\n                        onClick: handleSetAlarmTime,\n                        innerText: 'Set alarm time',\n                      },\n                      {\n                        onClick: handleSwitchState,\n                        innerText: 'Switch alarm state',\n                      },\n                    ]}\n                  />\n                </Paper>\n              </Grid>\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </div>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default Alarmclock;\n","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Copyright from '../../components/copyright';\nimport {mdiWater} from '@mdi/js';\nimport {mdiClock} from '@mdi/js';\nimport Icon from '@mdi/react';\nimport DeviceManager from '../../components/deviceManager';\nimport DeviceInfo from '../../components/deviceInfo';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {MuiPickersUtilsProvider} from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {WatermixerData} from '@gbaranski/types';\nimport {useInterval} from '../../helpers';\nimport {getWatermixerData, startMixing} from '../../requests';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nfunction parseSeconds(seconds: number) {\n  return `${Math.floor((seconds / 60) % 60)}m ${seconds % 60}s`;\n}\n\nfunction Watermixer() {\n  const classes = useStyles();\n\n  const dataFromCache = localStorage.getItem('lastWatermixerData');\n  const parsedDataFromCache: WatermixerData | undefined = dataFromCache\n    ? JSON.parse(dataFromCache)\n    : undefined;\n\n  const [data, setData] = React.useState<WatermixerData | undefined>(\n    parsedDataFromCache || undefined,\n  );\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState('');\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n\n  const handleStartMixing = async () => {\n    const res = await startMixing();\n    if (res) {\n      setSnackbarMessage('Success mixing water!');\n    } else {\n      setSnackbarMessage('Success mixing water!');\n    }\n    setSnackbarOpen(true);\n    setTimeout(() => {\n      setSnackbarOpen(false);\n    }, 1000);\n  };\n\n  useInterval(async () => {\n    const newData = await getWatermixerData();\n    setData(newData);\n    localStorage.setItem('lastWatermixerData', JSON.stringify(newData));\n  }, 500);\n\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const deviceInfo = [\n    {\n      title: 'Current state',\n      description: `Water should be ${data?.isTimerOn ? 'warm' : 'cold'}`,\n      icon: <Icon path={mdiWater} size={2} color=\"rgb(117,117,117)\" />,\n    },\n    {\n      title: 'Remaining time',\n      description: data ? parseSeconds(data.remainingSeconds) : '0',\n      icon: (\n        <Icon\n          path={mdiClock}\n          size={1.5}\n          color=\"rgb(117,117,117)\"\n          style={{marginLeft: '8%'}}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message={snackbarMessage}\n        action={\n          <React.Fragment>\n            <Button\n              color=\"secondary\"\n              size=\"small\"\n              onClick={handleSnackbarClose}>\n              UNDO\n            </Button>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleSnackbarClose}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n\n      <CssBaseline />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={12}>\n              <Paper className={fixedHeightPaper}>\n                <DeviceInfo data={deviceInfo} />\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <DeviceManager\n                  data={[\n                    {\n                      onClick: handleStartMixing,\n                      innerText: 'Start mixing',\n                    },\n                  ]}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default Watermixer;\n","import React from 'react';\nimport Dashboard from './pages/dashboard';\nimport Alarmclock from './pages/alarmclock';\nimport Watermixer from './pages/watermixer';\nimport {Redirect} from 'react-router-dom';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'root',\n    main: () => <Redirect to={{pathname: '/dashboard'}} />,\n    exact: true,\n    protected: true,\n  },\n  {\n    path: '/dashboard',\n    name: 'Dashboard',\n    main: () => <Dashboard />,\n    exact: true,\n    protected: true,\n  },\n  {\n    path: '/alarmclock',\n    name: 'Alarmclock',\n    main: () => <Alarmclock />,\n    exact: true,\n    protected: true,\n  },\n  {\n    path: '/watermixer',\n    name: 'Watermixer',\n    main: () => <Watermixer />,\n    exact: true,\n    protected: true,\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {login} from '../../requests';\nimport Copyright from '../../components/copyright';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(1, 0, 2),\n  },\n}));\n\nexport default function LoginPage(props: {\n  setAttemptedToLogin: any;\n  setLoggedIn: any;\n}) {\n  const classes = useStyles();\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState('');\n\n  const handleSnackbarClose = () => {\n    setSnackbarOpen(false);\n  };\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    localStorage.setItem('username', username);\n    localStorage.setItem('password', password);\n    const res = await login();\n    if (res) {\n      props.setAttemptedToLogin(true);\n      props.setLoggedIn(true);\n    } else {\n      setSnackbarMessage('Failed logging in');\n      setSnackbarOpen(true);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={snackbarOpen}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose}\n        message={snackbarMessage}\n        action={\n          <React.Fragment>\n            <Button\n              color=\"secondary\"\n              size=\"small\"\n              onClick={handleSnackbarClose}>\n              UNDO\n            </Button>\n            <IconButton\n              size=\"small\"\n              aria-label=\"close\"\n              color=\"inherit\"\n              onClick={handleSnackbarClose}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          className={classes.form}\n          autoComplete=\"off\"\n          onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Username\"\n            name=\"email\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={handleSubmit}>\n            Sign In\n          </Button>\n        </form>\n      </div>\n      <Box mt={1}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Title from '../../components/title';\n\nfunction LoginLoading() {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        textAlign: 'center',\n        transform: 'translate(-50%, -50%)',\n      }}>\n      <CircularProgress />\n      <Title>Loading</Title>\n    </div>\n  );\n}\n\nexport default LoginLoading;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport OpacityIcon from '@material-ui/icons/Opacity';\nimport SettingsRemoteIcon from '@material-ui/icons/SettingsRemote';\nimport InfoIcon from '@material-ui/icons/Info';\nimport LiveHelpIcon from '@material-ui/icons/LiveHelp';\nimport {NavLink} from 'react-router-dom';\nimport {DeviceList} from '@gbaranski/types';\n\nconst Icons = (props: {index: number}) => {\n  switch (props.index) {\n    default:\n    case 0:\n      return <DashboardIcon />;\n    case 1:\n      return <AlarmIcon />;\n    case 2:\n      return <OpacityIcon />;\n    case 3:\n      return <SettingsRemoteIcon />;\n  }\n};\n\nconst getLink = (index: number) => {\n  switch (index) {\n    default:\n    case 0:\n      return '/dashboard';\n    case 1:\n      return '/alarmclock';\n    case 2:\n      return '/watermixer';\n    case 3:\n      return '/gate';\n  }\n};\nconst primaryText = (index: number) => {\n  if (index === 0) {\n    return 'Dashboard';\n  } else {\n    let returnText = [Object.keys(DeviceList)[index - 1]];\n    if (returnText[0] === DeviceList.Gate) {\n      returnText[0] = `${DeviceList.Gate} & ${DeviceList.Garage}`;\n    }\n    return returnText;\n  }\n};\n\nconst disabledItems = [DeviceList.Gate];\n\nconst checkIfDisabledItem = (index: number) => {\n  return disabledItems.includes(Object.values(DeviceList)[index - 1]);\n};\n\nconst FancyLink = React.forwardRef(\n  (props: {index: number; className: string | undefined; navigate: any}) => {\n    return (\n      <ListItem\n        button\n        disabled={checkIfDisabledItem(props.index)}\n        key={props.index}\n        onClick={props.navigate}\n        selected={props.className !== undefined}>\n        <ListItemIcon>\n          <Icons index={props.index} />\n        </ListItemIcon>\n        <ListItemText primary={primaryText(props.index)} />\n      </ListItem>\n    );\n  },\n);\n\nexport const MainListItems = () => {\n  return [0, 1, 2, 3].map((_element, index) => {\n    return (\n      <NavLink\n        to={() => getLink(index)}\n        activeClassName=\"selected\"\n        // @ts-ignore\n        index={index}\n        component={FancyLink}\n      />\n    );\n  });\n};\n\nexport const secondaryListItems = (\n  <div>\n    <ListSubheader inset>More</ListSubheader>\n    <ListItem button key={1}>\n      <ListItemIcon>\n        <InfoIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"About website\" />\n    </ListItem>\n    <ListItem button disabled key={2}>\n      <ListItemIcon>\n        <LiveHelpIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Support\" />\n    </ListItem>\n  </div>\n);\n","import React from 'react';\nimport clsx from 'clsx';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {makeStyles} from '@material-ui/core';\nimport {useLocation} from 'react-router-dom';\nimport {capitalizeFirst} from '../../helpers';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBarShift: {\n    marginLeft: 240,\n    width: `calc(100% - ${240}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n}));\n\nexport default function Appbar(props: {open: boolean; handleDrawerOpen: any}) {\n  const classes = useStyles();\n  return (\n    <AppBar\n      position=\"absolute\"\n      className={clsx(classes.appBar, props.open && classes.appBarShift)}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={props.handleDrawerOpen}\n          className={clsx(\n            classes.menuButton,\n            props.open && classes.menuButtonHidden,\n          )}>\n          <MenuIcon />\n        </IconButton>\n        <Typography\n          component=\"h1\"\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}>\n          {capitalizeFirst(useLocation().pathname.slice(1))}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Drawer from '@material-ui/core/Drawer';\nimport {makeStyles, IconButton, Divider, List} from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport {MainListItems, secondaryListItems} from './NavigationList';\nimport Appbar from '../appbar';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n}));\n\ninterface props {\n  open: boolean;\n  handleDrawerOpen: any;\n  handleDrawerClose: any;\n}\n\nfunction LeftNavigationBar(props: props) {\n  const classes = useStyles();\n  return (\n    <>\n      <Appbar open={props.open} handleDrawerOpen={props.handleDrawerOpen} />\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(\n            classes.drawerPaper,\n            !props.open && classes.drawerPaperClose,\n          ),\n        }}\n        open={props.open}>\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={props.handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{MainListItems()}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default LeftNavigationBar;\n","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport routes from './routes';\nimport LoginPage from './pages/login';\nimport LoginLoading from './pages/loginLoading';\nimport {login} from './requests';\nimport {initializeFirebase} from './services/firebase';\nimport LeftNavigationBar from './components/leftNavigationBar';\nimport {makeStyles} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n  },\n}));\n\nconst getLoginPage = async (setLoggedIn: any, setAttemptedToLogin: any) => {\n  const res = login();\n  if (await res) {\n    setLoggedIn(true);\n  }\n  res.then(() => setAttemptedToLogin(true));\n};\n\nconst App = () => {\n  const classes = useStyles();\n  useEffect(() => {\n    initializeFirebase();\n  }, []);\n\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isAttemptedToLogin, setAttemptedToLogin] = useState(false);\n  const [open, setOpen] = useState(true);\n\n  if (!isAttemptedToLogin) {\n    getLoginPage(setLoggedIn, setAttemptedToLogin);\n    return <LoginLoading />;\n  }\n  const SafeRoute = ({children, ...rest}: any) => {\n    if (rest.protected) {\n      return (\n        <Route\n          {...rest}\n          render={({location}) =>\n            isLoggedIn ? (\n              children\n            ) : (\n              <Redirect\n                to={{\n                  pathname: '/login',\n                  state: {from: location},\n                }}\n              />\n            )\n          }\n        />\n      );\n    } else {\n      return <Route {...rest} render={({location}) => children} />;\n    }\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  return (\n    <div className={classes.root}>\n      {isLoggedIn && (\n        <>\n          <Redirect\n            to={{\n              pathname: '/',\n            }}\n          />\n          <LeftNavigationBar\n            open={open}\n            handleDrawerClose={handleDrawerClose}\n            handleDrawerOpen={handleDrawerOpen}\n          />\n        </>\n      )}\n      <Switch>\n        {routes.map((route, index) => (\n          <SafeRoute\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            protected={route.protected}\n            name={route.name}\n            children={<route.main />}\n          />\n        ))}\n        <Route path={'/login'} exact>\n          {!isLoggedIn && (\n            <LoginPage\n              setAttemptedToLogin={setAttemptedToLogin}\n              setLoggedIn={setLoggedIn}\n            />\n          )}\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}